version: 1

disable_existing_loggers: false

incremental: false

formatters:

  default:
    format: '%(asctime)s %(name)-15s %(levelname)-8s %(message)s'

handlers:

  console:
    class : logging.StreamHandler
    formatter: default
    level   : DEBUG
    stream  : ext://sys.stdout

  debugLog:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: default
    filename: /Users/Diheng/Box Sync/TEST_Diheng/recovered_data/Debug.log
    level: DEBUG
    backupCount: 366
    when: midnight

  dailyLog:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: default
    filename: /Users/Diheng/Box Sync/TEST_Diheng/recovered_data/Daily.log
    level: INFO
    backupCount: 366
    when: midnight

  errorLog:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: default
    filename: /Users/Diheng/Box Sync/TEST_Diheng/recovered_data/Error.log
    level: WARNING
    backupCount: 366
    when: midnight

  sandyLog:
    class: logging.handlers.TimedRotatingFileHandler
    formatter: default
    filename: /Users/Diheng/Box Sync/TEST_Diheng/recovered_data/Break_down.log
    level: CRITICAL
    backupCount: 366
    when: midnight

loggers:

  recovery:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.decrypt:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.safeWrite:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.safeRecover:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.pathCheck:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.takeOrder:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

  recovery.createFile:
    handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
    propagate: false

root:
  level: DEBUG
  handlers: [console, dailyLog, errorLog, debugLog, sandyLog]
  propagate: true
